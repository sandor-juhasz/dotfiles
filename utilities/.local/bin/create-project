#!/bin/bash

set -e

source $HOME/.local/share/js-shell-lib/tui.sh

TEMPLATE_HOME="$HOME/projects/project-templates"
PROJECT_HOME="$HOME/projects"

die() {
    echo "$*" 1>&2
    exit 1
}

check_template_exists() {
    return $(test -d "$TEMPLATE_HOME/$1")
}

list_dirs() {
    find $1/* -prune -type d -printf "%f\n"
}

choose_template() {
    list_dirs "${TEMPLATE_HOME}" | fzf --tac --border=rounded --border-label="Select a project template"
}

latest_directory() {
    /bin/ls -1ct "$1" | head -1
}

create_github_repo() {
    pushd "${project_dir}" || die "Cannot enter ${project_dir} to initialize git."
    git add .
    git commit -m "Initial commit"
    gh repo create "${project_name}" --private --source . --push
    popd || die "Popd failed."
}

main() {
    local template_name="$1"
    if [ -z "${template_name}" ]; then
        template_name=$(choose_template) || die "Interrupted."
    fi

    echo "Checking $template_name"
    check_template_exists "$template_name" || die "Template not found."
    cookiecutter "$TEMPLATE_HOME" --directory "$template_name" --output-dir "$PROJECT_HOME" || die "create-project: Error while executing Cookiecutter. Exiting."
    echo "Project is successfully created."
    echo "Initializing Git..."
    local project_dir
    project_dir="${PROJECT_HOME}/$(latest_directory "${PROJECT_HOME}")"
    local project_name
    project_name=$(basename "${project_dir}")
    pushd "${project_dir}" || die "Cannot enter ${project_dir} to initialize git."
    git init
    popd || die "Popd failed."
    tui_confirm "Do you want to create a GitHub repository '${project_name}'?" && create_github_repo
    tui_confirm "Do you want to edit the project?" && edit-project "${project_dir}"
}

list_templates() {
    ls -1 "$TEMPLATE_HOME"
}

main $@
