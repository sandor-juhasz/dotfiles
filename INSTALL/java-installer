#!/bin/bash

source "${BASH_SOURCE%/*}/common.sh"

# TODO: add dynamic parsing for version number.
JAVA_INSTALL_ROOT="/usr/local"
JAVA_SYMLINK_DIR="${JAVA_INSTALL_ROOT}/jdk"

MAVEN_VERSION="3.9.2"
MAVEN_INSTALL_ROOT="/usr/local"

#
# Calculated variables
#
# https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz


MAVEN_INSTALL_DIR="${MAVEN_INSTALL_ROOT}/apache-maven-${MAVEN_VERSION}"
MAVEN_SYMLINK_DIR="${MAVEN_INSTALL_ROOT}/maven"
MAVEN_INSTALL_PACKAGE="apache-maven-${MAVEN_VERSION}-bin.tar.gz"
MAVEN_INSTALL_PACKAGE_URL="https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"

VSCODE_EXTENSION="vscjava.vscode-java-pack"

function list_installed_jdks() {
    /bin/ls -1d /usr/local/openjdk-*
}

function install_openjdk() {
    local jdk_version=$1
    local jdk="JDK ${jdk_version}"
    echo "Installing ${jdk}..."

    mkdir -p /tmp/openjdk-install
    openjdk-versions >/tmp/openjdk-install/versions

    local package_url=$(cat /tmp/openjdk-install/versions | jq -r ".[] | select(.name==\"${jdk}\").url")
    local package_checksum_url=$(cat /tmp/openjdk-install/versions | jq -r ".[] | select(.name==\"${jdk}\").sha256")
    local version=$(cat /tmp/openjdk-install/versions | jq -r ".[] | select(.name==\"${jdk}\").version")
    local package_filename=$(echo "$package_url" | sed 's|.*/\([^/]*\)$|\1|')

    echo "Installing OpenJDK ${version}..."
    echo "   Package URL: ${package_url}"
    echo "   Package version: ${version}"
    echo "   Package filename: ${package_filename}"
    
    if [[ -d "${JAVA_INSTALL_ROOT}/openjdk-${version}" ]]; then
        echo "OpenJDK ${version} has already been installed."
        return 0
    fi

    mkdir -p /tmp/openjdk-install
    pushd /tmp/openjdk-install || return 1
    
    wget "${package_url}"
    wget "${package_checksum_url}"

    tar -xvzf "${package_filename}"
    installdir=$(/bin/ls -ctd */ | head -1)
    if [[ "$installdir" != "openjdk-${version}" ]]; then
        mv "$installdir" "openjdk-${version}" 
    fi

    sudo mv "openjdk-${version}" "${JAVA_INSTALL_ROOT}"
    if [[ -e "${JAVA_SYMLINK_DIR}" ]]; then
        echo "Deleting previous symlink ${JAVA_SYMLINK_DIR}..."
        sudo rm "${JAVA_SYMLINK_DIR}"
    fi
    echo "Creating symlink ${JAVA_SYMLINK_DIR}..."
    sudo ln -s "${JAVA_INSTALL_ROOT}/openjdk-${version}" "${JAVA_SYMLINK_DIR}"
    popd || return 1

    echo "Cleanup..."
    rm -r "/tmp/openjdk-install"
    echo "JDK ${version} has been successfully installed."
}

install_maven() {
    echo "Installing Maven..."
    wget "${MAVEN_INSTALL_PACKAGE_URL}"
    tar -xvzf "${MAVEN_INSTALL_PACKAGE}"
    sudo mv "apache-maven-${MAVEN_VERSION}" "${MAVEN_INSTALL_ROOT}"
    sudo ln -s "${MAVEN_INSTALL_DIR}" "${MAVEN_SYMLINK_DIR}"
    rm "${MAVEN_INSTALL_PACKAGE}"

    popd || exit
}

function install() {
    pushd /tmp || exit

    install_openjdk 20
    install_maven
    install_vscode_extension "${VSCODE_EXTENSION}"

    mkdir -p ~/.config/env.d
    cat <<EOF >~/.config/env.d/java.sh
export JAVA_HOME=${JAVA_SYMLINK_DIR}
export PATH=\$PATH:/usr/local/jdk/bin
export PATH=\$PATH:/usr/local/maven/bin
EOF
}

uninstall_jdk() {
    echo "uninstalling $1"
    sudo rm -r $1
    echo "Done."
}


uninstall_all_jdks() {
    list_installed_jdks | while read jdk; do
        uninstall_jdk $jdk
    done
    sudo rm "${JAVA_SYMLINK_DIR}"
}

function uninstall() {
    echo "Uninstalling JDKs..."
    uninstall_all_jdks

    echo "Uninstalling Maven..."
    if [[ -L "${MAVEN_SYMLINK_DIR}" ]]; then
        echo "Removing symlink ${MAVEN_SYMLINK_DIR}"
        sudo rm "${MAVEN_SYMLINK_DIR}"
    fi

    if [[ -d "${MAVEN_INSTALL_DIR}" ]]; then
        echo "Removing install dir ${MAVEN_INSTALL_DIR}"
        sudo rm -r "${MAVEN_INSTALL_DIR}"
    fi

    if [[ -e ~/.config/env.d/java.sh ]]; then
        echo "Deleting ~/config/env.d/java.sh"
        rm ~/.config/env.d/java.sh
    fi

    uninstall_vscode_extension "${VSCODE_EXTENSION}"
}

main $1
