# Emoji DB: https://emojidb.org/

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

format="""
$container\
[](fg:green bg:none)\
${custom.vpn}\
[](bg:blue fg:green)\
$kubernetes\
[](bg:yellow fg:blue)\
$aws\
[](bg:none fg:yellow) $all\
([](fg:purple bg:none)${custom.gitdir}\
${golang}${java}${julia}${python}${rust}${terraform}\
[](bg:green fg:purple)${custom.gituseroverride}$git_branch$git_state$git_status[](bg:none fg:green))\
$directory$character
"""

[aws]
format = '[($profile)(:$region)(\[$duration\])]($style)'
style = "bg:yellow fg:black"

# Replace the '❯' symbol in the prompt with '➜'
[character] # The name of the module we are configuring is 'character'
success_symbol = '[➜](bold green)' # The 'success_symbol' segment is being set to '➜' with the color 'bold green'

[container]
symbol = "🐳"
style = ""
format = '[$symbol]($style) '
disabled = false

[directory]
truncation_length = 0
repo_root_style = "fg:blue"
repo_root_format = '[$path]($style)[$read_only]($read_only_style)'

[git_branch]
format='[$symbol$branch(:$remote_branch)]($style)'
style = "bg:green fg:black"

[git_state]
style = "bg:green fg:black"

[git_status]
style = "bg:green fg:black"
format = '([\[$all_status$ahead_behind\]]($style))'

[golang]
format = '[$symbol($version )]($style)'
symbol = " 🐹"
style = "bg:purple fg:black"

[java]
format = '[$symbol]($style)'
symbol =" ☕"
style = "bg:purple fg:black"

[julia]
format = '[$symbol]($style)'
symbol =" ஃ"
style = "bg:purple fg:black"

[kubernetes]
symbol = "󱃾"
disabled = false
format = '[$context(:$namespace)]($style)'
style = "bg:blue fg:black"

[kubernetes.context_aliases]
'docker-desktop' = "🐳"

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[python]
symbol =" 🐍"
disabled = false
format = '[$symbol]($style)'
style = "bg:purple fg:black"

[rust]
format = '[$symbol]($style)'
symbol =" 🦀"
style = "bg:purple fg:black"

[terraform]
format = '[$symbol]($style)'
symbol =" 󱁢"
style = "bg:purple fg:#0000FF"

[custom.gituseroverride]
command = '(git config --local --get user.name >/dev/null || git config --local --get user.email >/dev/null) && echo "👓"'
description = "Shows a glasses icon if the repo has local username and email overrides"
format = '[$output ]($style)'
require_repo = true
when = true
style = "bg:green fg:black"

[custom.gitdir]
command = 'basename $(git rev-parse --show-toplevel)'
description = 'The root project directory name of a Git repo.'
require_repo = true
when = true
format = '[$output]($style)'
style = "bg:purple fg:black"

[custom.vpn]
command = 'is-vpn-connected'
description = 'Shows if VPN is connected'
when = "test -n $STARSHIP_VPN_CONNECTION_STATUS"
format = '[$output]($style)'
style = "bg:green fg:black"
ignore_timeout = true
